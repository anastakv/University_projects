# -*- coding: utf-8 -*-
"""ПМ18_1_Коротецкая_pandas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U6loQrzYg4g5UpAJ7h9l5850Qq5xS9Mi
"""

import pandas as pd
import numpy as np

from google.colab import drive
drive.mount('/content/drive')

"""1) Задание: загрузить данные из файлов (приложены к письму):
* excel-comp-data.xlsx
* sp500hst.txt 
"""

cmp = pd.read_excel('drive/MyDrive/excel-comp-data.xlsx')
cmp

"""2) Загрузить данные из файла sp500hst.txt, обозначить столбцы (в соответствии с содержимым). """

sp = pd.read_csv('drive/MyDrive/sp500hst.txt', header = None)
sp.columns = ['Date','Ticker','Open','High','Low','Close','Volume']
sp['Date'] = pd.to_datetime(sp['Date'],format = '%Y%m%d')
sp

"""3.1) Создать столбец со значеними средними, между значением дневного минимума и максимума."""

sp['avg'] = (sp['High'] + sp['Low'])/2
sp['avg']

"""3.2) Рассчитать среднее значение показателей для каждого из столбцов 3-6."""

for i in ['Open','High','Low','Close']:
  print(np.mean(sp[i]))

"""4.1) Создать DataFrame состоящий из строк относящихся только к 13 августа 2010 года. """

sp1 = sp[sp['Date'] == '2010-08-13']
sp1

"""4.1.2) Из DataFrame, созданного в 4.1, cоздать серию из 30 первых имен """

sp1['Ticker'][:30]

"""4.2) Из DataFrame, созданного в 4.1, создать новый DataFrame индексом в котором являются имена тикеров."""

sp2 = sp1
sp2.index = sp2['Ticker']

sp2

"""4.3) Создать DataFrame состоящий из строк относящихся только тикеру ALTR."""

sp3 = sp[sp.Ticker == 'ALTR']
sp3

"""4.4) Из DataFrame, созданного в 4.3, создать DataFrame индексом в котором являются даты."""

sp4 = sp3
sp4.index = sp3['Date']

sp4

"""4.5) В DataFrame, созданном в 4.3, добавить столбец, содержащий только число месяца, к которому относится дата."""

sp4['Day'] = sp4.index.day
sp4

"""4.5.1) Создать DataFrame состоящий из строк относящихся только тикеру WAT и объединить его с DataFrame для ALTR. """

sp5 = sp[sp.Ticker == 'WAT']
sp5
sp6 = pd.concat([sp3,sp5])
sp6

"""4.5.2) Создать DataFrame в котором присутствует столбец, отражающий разницу в объемах торгов по WAT и ALTR в одинаковые дни и содержит исходные данны об объеме трогов этими акциями."""

sp7 = sp5
sp7.index = sp7['Date']
sp7

sp4

sp7 = sp7.reindex(sp4.index)
sp7

sp8 = pd.DataFrame(columns = ['ALTR_VOL','WAT_VOL','DIFF'])
sp8['ALTR_VOL'] = sp4['Volume']
sp8['WAT_VOL'] = sp7['Volume']
sp8['DIFF'] = sp4['Volume'] - sp7['Volume']
sp8

"""4.6) В DataFrame добавить столбец, содержащий только число месяца, к которому относится дата.

4.7) Из DataFrame выбрать только строки, относящиеся к 13 числу месяца.
"""

sp['Year'] = sp['Date'].dt.year
sp['Month'] = sp['Date'].dt.month
sp['Day'] = sp['Date'].dt.day
sp

sp[sp['Day'] == 13]

"""4) Выяввиь столбцы содержащие минимальные и максимальные значения (если такие столбцы есть). (Проверить, есть ли среди столбцов, столбец с минимальным значением курса акций.)"""

sp.describe()

sp.iloc[:, 2:8]

"""5) По данным из 'sp500hst.txt' при помощи Pandas расчитать максимальные значения в 3-6 столбца для дат после 20100801

6) По данным из 'sp500hst.txt' при помощи Pandas расчитать средний объем торгов (обеъм торгов - в последнем столбце) при значениях 3го столбца больше 50.
"""

np.mean(sp[sp['Date'] == '2010-01-08'])[:4]

np.mean(sp['Volume'][sp['Open'] > 50])

"""7) Добавить столбец с расшифровкой названия тикера используя данные из файла sp_data2.csv . В случае нехватки данных об именах тикеров корректно обработать их.

8) Вывести тикеры, для которых не были найдены рсшифровки. 
"""

sp_data = pd.read_csv('drive/MyDrive/sp_data2.csv',delimiter = ';',header = None)
sp_data.columns = ['Ticker','Company','Yield']
sp_data

sp_data_3 = pd.merge(sp,sp_data,left_on=['Ticker'], right_on=['Ticker'], how='left')
sp_data_3.drop(['Yield'], axis='columns', inplace=True)
sp_data_3['Company'].fillna('Not enough information', inplace = True)
sp_data_3

sp_data_3['Ticker'][sp_data_3['Company'] == 'Not enough information'].unique()

"""9) Рассчитать суммарный объем торгов (столбец 7) для для одинаковых значений (тикеров) из столбца 2 

9.2) Для каждого тикера подсчитать, сколько раз он встречается.

10) Расчитать среднее значение показателей для каждого из столбцов 3-6 для одинаковых значений (тикеров) из столбца 2 и сохранить в новом DataFrame

11) Добавить в DataFrame новый столбец, содержащий объем торгов (столбец 7), нормированный по среднему значению объема торгов для данного тикера.


"""

sp.groupby(['Ticker'])['Volume'].sum()

sp['Ticker'].value_counts()

sp11 = pd.DataFrame(sp.groupby(['Ticker'])['Volume'].mean())
sp11

sp_12 = sp.groupby(['Ticker'])['Volume'].mean()
for i in sp['Ticker'].unique():
  sp['NormVolume'] = sp['Volume'] / sp_12[sp_12.index == i].values
sp

pitsa = {'first': sp1, 'second':}
pi